{
  
  "0": {
    "title": "Access Management",
    "content": "Access Management . Archetype: Access Management . What is it? Access management includes the identy verification, and authorization of an individual’s ability to access a system, application or any IT instance. It is a broad concept that encompasses all policies, processes, methodologies and tools to maintain access privileges within an IT environment. It includes administration of accesses, as well as logging of administration and access attempts to facilitate audit. Access management is a class of applications that stands alone, and should be distinguished from “role-based access” to privileged functions within an application. The former is implemented with a class of tool, the latter is an implementation detail within an application that is influenced through standards and guidelines. . Keywords: authentication, authorization, roles, single sign-on (SSO) . What it is not: This is not role-based access, which is the responsibility of an application or system. Role-based access may consume features and capabilities within a similar system that implements access management, but they are not the same thing. . Examples: Azure Active Directory (AD) may be used to control access to systems and networks. Through the use of groups and membership, Azure AD may also be used to restrict access to specific functionality within an application. . Preferred Direction: Focus on a single authoritative source for managing access to Government systems. Delegate the ability to manage access to applications to the owners of those applications. Continue to improve real-time monitoring and alert capabilities. .",
    "url": "http://localhost:4000/docs/DeliverableC/System%20Applications/AccessMgt.html",
    "relUrl": "/docs/DeliverableC/System%20Applications/AccessMgt.html"
  }
  ,"1": {
    "title": "Block Storage",
    "content": "Block Storage . **** Work in Progress ****** .",
    "url": "http://localhost:4000/docs/DeliverableC/Storage/BlockStorage.html",
    "relUrl": "/docs/DeliverableC/Storage/BlockStorage.html"
  }
  ,"2": {
    "title": "Business Applications",
    "content": "Business Applications .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/BusinessApplications.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/BusinessApplications.html"
  }
  ,"3": {
    "title": "Client Relationship Management",
    "content": "Customer Relationship Management . Archetype: Customer Relationship Management . What is it? Customer relationship management (CRM) is the management of an organization’s interaction with current and potential customers. Customers in a public sector context include citizens, businesses, and other stakeholders. Some defining features of a CRM include a centralized contact list and correspondence tracking. A CRM may include workflow capabilities, analytical features to measure customer satisfaction, lead potential, and integrations with call centre applications, and other communication systems such as email. . What it is not: We must distinguish between the need for a CRM solution, and building other systems upon a platform that is (or was) at its core, a CRM system, simply because they are related systems. Although “case management” might be (arguably) seen by some as a derivative of CRM, for this exercise, one is not the other. A “CRM platform” is not necessarily CRM, though it does enable CRM capabilities. . Examples: Out-of-the-box Microsoft Dynamics could be classified as a CRM system, as could SalesForce. However, given the risk and associated cost, of building dependencies upon a platform such as (SalesForce) force.com or upon Dynamics (the PaaS), for this exercise, we must differentiate between them. . Preferred Direction: Distinguish CRM from the platforms upon which they’re built. Determine guidelines for the use of both, and provide advisory services for implementation of both. Guard against the accidental overlap – build upon a CRM platform must be an explicit and fully-informed decision, to guard against vendor product and service lock-in, and to optimize exit costs. . For discussion: Should “lower-level” capabilities like the ones mentioned above (mail, analytics, workflow) be in this list, or a separate list, or neither? . Pros: COTS CRM Solution vs Custom build CRM Solution . Con: COTS CRM soution vs Custom build CRM Solution .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/CRM.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/CRM.html"
  }
  ,"4": {
    "title": "Call Centre",
    "content": "Call Centre . Archetype: Call Centre . What is it? A call centre is a (logical, and may be one or more locations representing a) collection of phone lines, usually staffed, used for receiving and/or transmitting a high volume of enquiries by telephone. A Call Centre can be supplemented with an Interactive Voice Response unit that may collect statistics and route calls. A Call Centre is often supported by a “tracking” system that helps steward a call or incident to some kind of resolution. . What it is not : Many ministries have a tracking function for ministerial correspondence. This does not necessarily constitute a call centre. The tracking system mentioned above, that may support a Call Centre, is a logically separate entity, not in scope of this archetype. . Keywords: Interactive Voice Response (IVR), contact centre, call centre, support line . Examples of Call Centre: 7-7000 Support Centre, Enquiry BC . Preferred Direction: To aggregate and document enterprise-wide need for a call centre capability, and provide a short list of recommended approaches. Those approaches may include a short list of vendors providing services and/or tools in support. .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/CallCentre.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/CallCentre.html"
  }
  ,"5": {
    "title": "Case Management",
    "content": "Case Management . Archetype: Case Management . What is it? Case management is the coordination of services on behalf of an individual within settings such as health care, nursing, rehabilitation, social work, disability insurance, employment, and law. However, in the legal context, case management may refer to the collection and management of material (evidence, argument for both sides, judgements, appeals) specific to a particular matter between two individuals (one of which may be The Crown.) The need to secure personal information is generally higher in a case management context. . What it is not: In this context, cases are more focused in individuals than technology, so an IT Trouble Ticket system would not be considered “case management”. It is not Customer Relationship Management (CRM), though case management systems may be based upon CRM. There are considerably more marketing capabilities embodied in CRM, used to convince “leads” of a need for a product or service. There is often considerably more “document management” and “records management” used within case management. . Examples of Case Management: Delivery and tracking of services to a specific individual, such as a child in care, a homeless individual, and patient receiving care for a specific illness. . Preferred Direction: To aggregate need, recognize high-level use cases, and recomment approaches to address the need. There may also be opportuniteis to decompose larger case management requirements, so that they may be addressed with smaller contracts or services or solutions. . For discussion: How does case management influence the case collective? That is, upon “completion” of a case, it may become part of a larger collection available for the (public) consumption (open data). What does a common service look like in this context? .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/CaseManagement.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/CaseManagement.html"
  }
  ,"6": {
    "title": "Cold Data Storage",
    "content": "Cold Data Storage . **** Work in Progress ****** .",
    "url": "http://localhost:4000/docs/DeliverableC/Storage/ColdDataStorage.html",
    "relUrl": "/docs/DeliverableC/Storage/ColdDataStorage.html"
  }
  ,"7": {
    "title": "Compute",
    "content": "Compute . Definition . Compute is a term widely used in both the datacenter and cloud computing space and is used to refer to the resources that are provisioned to run applications over extended periods of time ensuring they are efficient, scalable, reliable and highly available. .",
    "url": "http://localhost:4000/docs/DeliverableC/Compute/Compute.html",
    "relUrl": "/docs/DeliverableC/Compute/Compute.html"
  }
  ,"8": {
    "title": "Containers",
    "content": "Containers . Containers are an evolution of the Virtual Machines. Whilst Virtual Machines themselves being guest machines with operating systems installed that add a significant overhead on the host, containers are small run time environments which share the base operating system kernel which contain just enough resources to run your applications. As defined by Docker, they are isolated from one another, bundle their own software, libraries and configuration files and can communicate with each other using well defined channels. Containers are loosely coupled and short lived and require orchestration platforms to help manage them. . Container Orchestration Platforms help in creating clusters of resource pools or nodes and enabling to share resources among the nodes belonging within a cluster. These nodes can be physical servers or virtual machines. The Openshift Platform set up by BC Gov uses around 20 nodes which are virtual machines hosted in the on prem data center. There is also work being done in hosting these nodes on Azure Virtual Machines. . Kubernetes is an open source container orchestration platform that helps to automate the deployment of containers, and help manage other aspects such as resource utilization, scaling and load balancing. Though originally designed by google, Kubernetes is now managed by Cloud Native Computing Foundation. . OpenShift Container Platform, an on-premises platform as a service, used widely in the BC Government is built around Docker containers orchestrated and managed by Kubernetes on a foundation of Red Hat Enterprise Linux. Openshift therefore comes with better and more strict security policies than default kubernetes. One of the major advantages of using openshift is it forbids to run the containers as “root” or “super-user” account. This can prevent ad-hoc changes from the development team on production applications, which might be not recorded or applied to the next deployment or might be quick fixes. Openshift locks down this approach and enables the development team to troubleshoot issues and apply long term bug fixes with just a single path to make changes to the production environment which should typically be the CI/CD pipeline. . Adopting Containers help adopt a DevOps culture within your team and helps to decouple your applications, reduce dependencies, and work towards a domain driven design approach. Containers die easily and can be easily started from the container image built and stored in the platform registry from your application code. This is automatically done by the orchestration platform and so is the sharing and allocation of resources. . By using containers, and configuring them for high availability and resilience, you can ensure that, even if the node on which the container lives crashes, the replicas on other nodes remain unaffected. It has been found that the overall cluster availability was 99.99% for the BC Gov Openshift Cluster even though individual node availability has been around 80%. . Pros . Containers are light weight utilize minimal hardware resources in comparison to Virtual Machines and Physical Servers. While Virtual Machines might need 1GB of RAM or 2 CPU cores, a container might just require 512 MB of RAM and 500 millicores of CPU to run the same application. | Applications deployed in containers are highly portable and can be deployed easily to different operating systems or hardware platforms. They also encoourage the development team to build deployment scripts that are cross platform and can be run from any CI/CD orchestrator or even from the developers local machine which reduces platform dependencies and vendor lock-in. Containers are stored as images and containers that run in Openshift can be run on AWS, GCP or Azure without making any changes to them. | Containers are highly efficient and can be quickly deployed. This promotes agility and enables developers to push small changes to components without effecting other components more frequently. | Containers ensure consistency and ensure the development, test and production environments remain the same, since the images are build once and deployed multiple times to different environments. This helps developers to detect failures faster and debug them before they can even be deployed to Production. | Cons . Despite most orchestration platforms being PaaS, deploying containers still require steps such as choosing the right base image, ensuring the base images are up to date and provisioning other surrounding objects to run the containers such as deployment configurations, build configurations, image streams, services, routes, storage, stateful sets etc. These objects are specific to the different vendors. . | Persistent data storage is a complicated subject with respect to containers and if you have applications that access network shares like Windows Shares, NFS, FTP etc, it becomes increasingly complicated to lift and shift your application unless you design ways to move your data to the cloud. . | Only applications that are designed to run as a set of discreet microservices stand to gain the most from containers . | The BC Gov Story . BC Government has . Application statistics . Type of Software category Application Archetype Number of Apps on Containers .   | Call Centre |   | .   | Case Management |   | .   | Content Management |   | .   | CRM |   | .   | Grant Management |   | .   | HR |   | .   | Learning |   | .   | Licensing |   | . Business Applications | Mapping |   | .   | Online Disputes |   | .   | Payment |   | .   | Portfolio Management |   | .   | Registry |   | .   | Reporting |   | .   | Service Management |   | .   | Survey |   | .   | Search |   | . Productivity Applications | Office 365 |   | .   | Skype |   | .   | DBMS |   | .   | Middleware |   | .   |   |   | . System Applications | Notification |   | .   | Integration |   | .   | Accessibility |   | .   | Access Management |   | .   | Bulk Email |   | . Applications Archetypes that can be hosted on Container Platforms . Best Practices to move from Physical Servers to Container Platforms . Best Practices to move from Virtual Machines to Container Platforms .",
    "url": "http://localhost:4000/docs/DeliverableC/Compute/Containers.html",
    "relUrl": "/docs/DeliverableC/Compute/Containers.html"
  }
  ,"9": {
    "title": "Content Management",
    "content": "Content Management . Archetype: Content Management . What is it? A content management system (CMS) is a software application that can be used to manage the creation and modification of digital content. More specific types of CMS might be enterprise content management, web content management, and Digital Asset Management. . What it is not: Project management/tracking maybe seen by some as “content management”, and collaboration tools may involve management of content, but neither are content management systems. . Keywords: portal, knowledge base, wiki . Examples of Content Management: A CMS typically has two major components: an administrative interface that allows a content owner to add, modify, and remove content, and a delivery mechanism - often seen as “publishing” - that makes the content available to content consumers. CMS Lite is considered a CMS. The use of Drupal to produce our @Work site, yields a similar type of result, but is not in itself, a CMS. . Preferred Direction: Define the capability, aggregate the need across the enterprise, recognize high-level use cases, and recommend approaches to address the use cases. . For discussion: Are we saying here, that an acceptable implementation of this archetype must fully support records management legislation and CIRMO guidance? .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/ContentManagement.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/ContentManagement.html"
  }
  ,"10": {
    "title": "Data Warehouse",
    "content": "Data Warehouse . **** Work in Progress ****** .",
    "url": "http://localhost:4000/docs/DeliverableC/Storage/DataWarehouse.html",
    "relUrl": "/docs/DeliverableC/Storage/DataWarehouse.html"
  }
  ,"11": {
    "title": "File Storage",
    "content": "File Storage . **** Work in Progress ****** .",
    "url": "http://localhost:4000/docs/DeliverableC/Storage/FileStorage.html",
    "relUrl": "/docs/DeliverableC/Storage/FileStorage.html"
  }
  ,"12": {
    "title": "Grant Management",
    "content": "Grant Management . What is it? A grant is issued by a ministry to fund a specific project or initiative. Grant recipients typically require an application to indicate interest and eligibility, and some level of compliance and reporting. A grant management application is used to organize, possibly publish, prioritize, and process the grant applications received from citizens or businesses. Grants are typically a one-time allocation. . What it is not: This is not the same as capital investment proposals and allocation, though at a very fundamental base layer there are similarities. Capital is typically an allocation of much largers sums. Grants are often one-time. Ongoing and predictable funding should be categorized as financial management. . Keywords: award, scholarship, bursary, grant . Preferred Direction: Aggregate need across Government to survey the potential for a reduction in implementations, and a common toolset. Determine where each implementation is in its lifecycle, place it on a lifecycle spectrum, and target a first replacement with participation from stakeholders with a template. . For discussion: Could we find, or build, an application that was sufficiently configurable to address needs? .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/GrantManagement.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/GrantManagement.html"
  }
  ,"13": {
    "title": "Human Resources",
    "content": "Human Resources . Archetype: Human Resources . What is it? A major and extensive category of business processes and supporting tools that facilitate human resources functions such as management of employee personnel records, staff acquisition, discipline, benefits, and retirement, also time &amp; attendance, resource planning and allocation, skills management, and team &amp; organizational management. Most ministries have an internal HR function. . Keywords: hiring, staffing, retention, job description, benefits, time and leave, recruitment, performance evaluation . What it is not: Learning management has been defined as a separate category and is not currently considered in the scope of HR for this exercise. The Public Service Agency (PSA) is the central body responsible for human resources management. Not all PSA applications are necessarily HR applications. Management of contractors is not considered HR. Also, contract management is its own category, not in scope here. . Examples: Oracle Human Capital Management (HCM), Oracle PeopleSoft, SAP, KRONOS . Preferred direction: Examine the feasibility of decomposing the mega-vendor suite and its feature-set to accommodate a more flexible, modular approach to the larger set of HR capabilities. This would emphasize the critical nature of integrations. . For Discussion: Is status quo satisfactory? Decentralization seems consistent with many other corporate capabilities. Is that a conscious strategy, or an evolution? .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/HR.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/HR.html"
  }
  ,"14": {
    "title": "Learning Management System",
    "content": "Learning Management System . What is it? A learning management system (LMS) is a software application for the administration, documentation, tracking, reporting, and delivery of educational courses, training programs, or learning and development programs. . Keywords: LMS, training, professional development. .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/Learning.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/Learning.html"
  }
  ,"15": {
    "title": "License Management System",
    "content": "License Management System . What is it? A licensing management system is used to grant or revoke licenses or permits issued by a governing body. . Keywords: license, permit, etc .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/Licensing.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/Licensing.html"
  }
  ,"16": {
    "title": "Data Store",
    "content": "Data Store . **** Work in Progress ****** .",
    "url": "http://localhost:4000/docs/DeliverableC/Storage/LogicalStorage.html",
    "relUrl": "/docs/DeliverableC/Storage/LogicalStorage.html"
  }
  ,"17": {
    "title": "Mapping",
    "content": "Mapping . What is it? A mapping system is used to capture, store, manipulate, analyze, manage, and present spatial or geographic data. . Keywords: mapping, geographic information system (GIS), spatial, etc. .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/Mapping.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/Mapping.html"
  }
  ,"18": {
    "title": "NoSQL Database",
    "content": "NoSQL Database . **** Work in Progress ****** .",
    "url": "http://localhost:4000/docs/DeliverableC/Storage/NoSQLDatabase.html",
    "relUrl": "/docs/DeliverableC/Storage/NoSQLDatabase.html"
  }
  ,"19": {
    "title": "Notification",
    "content": "Notification . What is it? A notification system describes a “fire and forget” approach to communicating a time-sensitive communication. .",
    "url": "http://localhost:4000/docs/DeliverableC/System%20Applications/Notification.html",
    "relUrl": "/docs/DeliverableC/System%20Applications/Notification.html"
  }
  ,"20": {
    "title": "Object Storage",
    "content": "Object Storage . **** Work in Progress ****** .",
    "url": "http://localhost:4000/docs/DeliverableC/Storage/ObjectStorage.html",
    "relUrl": "/docs/DeliverableC/Storage/ObjectStorage.html"
  }
  ,"21": {
    "title": "Online Disputes",
    "content": "Online Disputes . What is it? Online dispute resolution uses technology to facilitate the resolution of disputes between parties. It primarily involves negotiation, mediation or arbitration, or a combination of all three. .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/Onlinedisputes.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/Onlinedisputes.html"
  }
  ,"22": {
    "title": "Payment",
    "content": "Payment . What is it? A payment system is any system used to settle financial transactions through the transfer of monetary value. This includes the institutions, instruments, people, rules, procedures, standards, and technologies that make its exchange possible. Payment systems include credit mechanisms. . Keywords: Bank, credit card, debit. . What is it not? Payment processing is largely centralized via Provincial Treasury (MFIN), which provides cash management, bank payment processing, revenue consolidation and electronic banking services to ministries, Crown corporations and public sector agencies. Ministry-specific funding to stakeholders should be categorized as financial management. . Payment App Architecture .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/Payment.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/Payment.html"
  }
  ,"23": {
    "title": "Physical Servers",
    "content": "Physical Servers . The evolution of compute began with using Physical Servers for hosting applications. A physical server is a larger, powerful version of a desktop computer and is housed in a data center. . Physical Servers run operating systems and other software applications which utilize the servers hardware capacity such a CPU, RAM, Storage and network devices. Physical servers do not typically share resources with each other in a data center thereby limiting the number of applications that can be housed on them. . Pros . The major benefit of investing in Physical Servers is that they provide you with the ability to manage and configure the components according to your business specifications. | Physical Servers also offer you with the flexibility to decide where to locate them; you can choose to locate them onsite or within a conveniently located facility. | Cons . The initial cost of ownership and maintenance of Physical Servers is very high. There might be need from time to time to add more resources for scaling your system based on demand, these will lead to evaluation and additional costs required to procure resources. Your application might have a lesser demand from time to time and this might lead to underutilization of resources as well making it hard to scale Physical Servers. . | The Physical Server infrastructure should be continuously maintained (24/7 for 365 days in a year) by your in-house employees or with help from external contractors. If a server goes out of date, all applications running on it are at risk You would also be responsible to keep your systems up to date, by updating/patching software and hardware constantly and renewing licenses to ensure system security. The updations can lead to considerable downtime of applications as well. . | Setting up your Physical Servers for disaster recovery is highly important and recovery in case of disasters could take hours or days to buy new servers and configure them. For fall back, you might decide to locate a geographically distant datacenter which adds to the initial and maintenance costs. . | Each Application is normally deployed (resides) on three servers or environments. Typically, these environments are known as development, test and production. The development (dev/dlvr/int) environment is typically where developers do their development. The test environment is where the code changes/application changes are tested by the business. The production environment makes the service available to end users. It is common in traditional infrastructure to maintain development, test and production environments slightly different owing to repetitive manual configurations and reduce costs. This would result in configuration drifts between these environments which can lead to bugs or defects in the application in production which do not surface during testing or development . | The BC Gov Story . BC Government has two datacenters, one located in Kamloops and the other in Calgary. The one is Calgary is mostly used to host Delivery and Test Environments and the one in Kamloops hosts the production environments. . Physical Server Types . Application statistics . Type of Software category Application Archetype Number of Apps on Physical Servers .   | Call Centre |   | .   | Case Management |   | .   | Content Management |   | .   | CRM |   | .   | Grant Management |   | .   | HR |   | .   | Learning |   | .   | Licensing |   | . Business Applications | Mapping |   | .   | Online Disputes |   | .   | Payment |   | .   | Portfolio Management |   | .   | Registry |   | .   | Reporting |   | .   | Service Management |   | .   | Survey |   | . Productivity Applications | Office 365 |   | .   | Skype |   | .   | DBMS |   | .   | Middleware |   | .   | Search |   | . System Applications | Notification |   | .   | Integration |   | .   | Accessibility |   | .   | Access Management |   | .   | Bulk Email |   | . Applications Archtypes worth keeping on Physical Servers .",
    "url": "http://localhost:4000/docs/DeliverableC/Compute/PhysicalServers.html",
    "relUrl": "/docs/DeliverableC/Compute/PhysicalServers.html"
  }
  ,"24": {
    "title": "Physical Storage",
    "content": "Physical Storage . **** Work in Progress ****** .",
    "url": "http://localhost:4000/docs/DeliverableC/Storage/PhysicalStorage.html",
    "relUrl": "/docs/DeliverableC/Storage/PhysicalStorage.html"
  }
  ,"25": {
    "title": "Portfolio Management",
    "content": "Portfolio Management . What is it? A portfolio management system supports the management of planned initiatives, projects, and ongoing IT services such as application support. .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/PortfolioManagement.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/PortfolioManagement.html"
  }
  ,"26": {
    "title": "Productivity Applications",
    "content": "Productivity Applications .",
    "url": "http://localhost:4000/docs/DeliverableC/Productivity%20Applications/ProductivityApplications.html",
    "relUrl": "/docs/DeliverableC/Productivity%20Applications/ProductivityApplications.html"
  }
  ,"27": {
    "title": "Registry",
    "content": "Registry . What is it? A registry is an authoritative list of all the official records where a public body serves as the system of record. . Examples: Examples of registries include land titles, individuals (via Provincial Health Number (PHN), Personal Education Number (PEN), etc.), businesses, property, vehicles, etc. In this context, a registry includes not only the data store itself, but any interfaces used to Create, Read, Update, or Delete (CRUD) entries in the registry. . What is it not? A registry requires persistence, typically in the form of a database. But not all databases are registries. Typically, a registry will assign a unique identifier to whatever is being tracked. Records in a registry are mutable and may undergo state transition, as opposed to immutable or transactional records in a transitory database system. A key differentiator is the scope of the data being persisted. The loss of a land title registry, for example, has very serious implications. .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/Registry.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/Registry.html"
  }
  ,"28": {
    "title": "Relational Database",
    "content": "Relational Database . **** Work in Progress ****** .",
    "url": "http://localhost:4000/docs/DeliverableC/Storage/RelationalDatabase.html",
    "relUrl": "/docs/DeliverableC/Storage/RelationalDatabase.html"
  }
  ,"29": {
    "title": "Reporting",
    "content": "Reporting . What is it? A reporting system is used to organize data into informational summaries to measure performance according to pre-defined criteria. . Keywords: metrics, extract, Jasper, reporting, etc. . What is it not: Reporting is not the same as analytics. Reporting raises questions, analytics attempts to answer them. .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/Reporting.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/Reporting.html"
  }
  ,"30": {
    "title": "Serverless Compute",
    "content": "Serverless Compute . Pros . Cons . The BC Gov Story . BC Government has two datacenters, one located in Kamloops and the other in Calgary. The one is Calgary is mostly used to host Delivery and Test Environments and the one in Kamloops hosts the production environments. . Application statistics . Type of Software category Application Archetype Number of Apps that are Serverless .   | Call Centre |   | .   | Case Management |   | .   | Content Management |   | .   | CRM |   | .   | Grant Management |   | .   | HR |   | .   | Learning |   | .   | Licensing |   | . Business Applications | Mapping |   | .   | Online Disputes |   | .   | Payment |   | .   | Portfolio Management |   | .   | Registry |   | .   | Reporting |   | .   | Service Management |   | .   | Survey |   | . Productivity Applications | Office 365 |   | .   | Skype |   | .   | DBMS |   | .   | Middleware |   | .   | Search |   | . System Applications | Notification |   | .   | Integration |   | .   | Accessibility |   | .   | Access Management |   | .   | Bulk Email |   | . Applications Archetypes that can be hosted on Serverless Compute Services . Best Practices to move from Physical Servers to Serverless Compute . Best Practices to move from Virtual Machines to Serverless Compute . Best Practices to move from Containers to Serverless Compute .",
    "url": "http://localhost:4000/docs/DeliverableC/Compute/Serverless.html",
    "relUrl": "/docs/DeliverableC/Compute/Serverless.html"
  }
  ,"31": {
    "title": "Service Management",
    "content": "Service Management . What is it? IT service management (ITSM) refers to the entirety of activities – directed by policies, organized and structured in processes and supporting procedures – that are performed by an organization to design, plan, deliver, operate and control information technology services. . Keywords: help desk, change management, incident management, problem management, release management, etc .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/ServiceManagement.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/ServiceManagement.html"
  }
  ,"32": {
    "title": "Storage",
    "content": "Storage .",
    "url": "http://localhost:4000/docs/DeliverableC/Storage/Storage.html",
    "relUrl": "/docs/DeliverableC/Storage/Storage.html"
  }
  ,"33": {
    "title": "Survey",
    "content": "Survey . What is this? A survey is a list of questions aimed at extracting specific data from a particular group of people. .",
    "url": "http://localhost:4000/docs/DeliverableC/Business%20Applications/Survey.html",
    "relUrl": "/docs/DeliverableC/Business%20Applications/Survey.html"
  }
  ,"34": {
    "title": "System Applications",
    "content": "System Applications .",
    "url": "http://localhost:4000/docs/DeliverableC/System%20Applications/SystemApplications.html",
    "relUrl": "/docs/DeliverableC/System%20Applications/SystemApplications.html"
  }
  ,"35": {
    "title": "Virtual Machines",
    "content": "Virtual Machines . To overcome issues with physical hardware, the concept of virtual servers was introduced. Virtualization is the process of running an instance of a computer system in a layer abstracted from the actual hardware. Virtual machines share resources such as CPU, RAM and storage from the host or base machine. The base machines knows of these machines as regular files, but with the help of a virtualization platform also known as a hypervisor, these files can be converted to machines to run your applications. Virtual Machines can be stored as images and can be easily transported from one hardware to another. . Pros . One of the major advantages of using virtual machines is the ability to run multiple operating systems on the same host or base machine. Thereby, it can help reduce the need to run multiple physical servers and has a huge impact on reducing costs and physical space requirements. | Virtual Machines can be maintained, provisioned and transported easily. | If you are using virtual machines hosted on the cloud, you don’t need to worry about the Physical hardware or OS updates, this would be taken care of by cloud providers. | Virtual Machines provide isolation of resources from the host machine and also from other guest virtual machines sharing the same host, thereby providing a strong secure boundary between various applications. | Cons . Virtual Machines enact Physical servers and can become of large size due to added Application dependencies and have a large Operating System footprint. . | Virtual Machines contain operating systems installed on them and thereby might take a long time to startup. Especially, while applying the principles of continuous integration and delivery, if the virtual machine should be easily destroyable and deployabled when needed, the Operating System booting could introduce significant delays. . | The BC Gov Story . BC Government has two datacenters, one located in Kamloops and the other in Calgary. The one is Calgary is mostly used to host Delivery and Test Environments and the one in Kamloops hosts the production environments. . Application statistics . Type of Software category Application Archetype Number of Apps on Virtual Machines .   | Call Centre |   | .   | Case Management |   | .   | Content Management |   | .   | CRM |   | .   | Grant Management |   | .   | HR |   | .   | Learning |   | .   | Licensing |   | . Business Applications | Mapping |   | .   | Online Disputes |   | .   | Payment |   | .   | Portfolio Management |   | .   | Registry |   | .   | Reporting |   | .   | Service Management |   | .   | Survey |   | . Productivity Applications | Office 365 |   | .   | Skype |   | .   | DBMS |   | .   | Middleware |   | .   | Search |   | . System Applications | Notification |   | .   | Integration |   | .   | Accessibility |   | .   | Access Management |   | .   | Bulk Email |   | . Applications Archetypes that can be hosted on Virtual Machines . Best Practices to move from Physical Servers to Virtual Machines .",
    "url": "http://localhost:4000/docs/DeliverableC/Compute/VirtualMachines.html",
    "relUrl": "/docs/DeliverableC/Compute/VirtualMachines.html"
  }
  ,"36": {
    "title": "C. Modernization Playbook",
    "content": "C. Modernization Playbook . Introduction – Digital Enterprise Architecture . Architecture can be described as the decisions that are required to be made up front that have a significant impact on the long-term success of any given undertaking. . In the technology and business landscape there are typically 5 layers of architecture. . Enterprise: Enterprise Architecture is concerned with the holistic organization or system, as in all associated things, and is typically aimed at achieving alignment… aka ensuring local optimization in one part of the system is not contributing to less than ideal outcomes overall. . Business: Business Architecture is concerned with the people, processes and technology required to usefully run a program or line of business. . Solution: Solution Architecture is concerned with a business solution and the optimal selection and integration of components to most effectively and efficiently meet the business need. These components are made up of software, compute and storage. . Application &amp; Data: Application Architecture is concerned with the best way to engineer software to ensure it’s highly useable, resilient and will have longevity. Data architecture has the same aims but specifically with respect to structured data. . Technical: While both solution and application and data architecture, could be considered technical in nature, by Technical Architecture we mean being dedicated to discussion and comparison of technical protocols and standards such as those that enable technologies such as the internet, voice over IP and other foundational pieces of technology to operate. . In this context Solution Architecture is the intermediary between the business and applications so it makes sense as the starting place for us in the context of the Hosting and Application Development Framework, as we attempt to reduce existing technical barriers to amazing services for citizens and businesses (and public servants too) in BC. . Solution Architecture . Solutions are typically created through the orchestration of 3 main building blocks or components: software (applications), compute and storage (hosting). In 2020 each of these categories breaks into a myriad of categories, representing numerous multitudes of options and approaches, with overlapping definitions, pros and cons - and there’s new variants emerging everyday! . Having a basic hierarchy and taxonomy of these components help us keep track of new and emerging opportunities for creating solutions to support awesome modern service experiences and exceptional outcomes. . Software . Productivity Applications . Office 365 | Skype | . Business Applications (Service Capabilities) . Client Relationship Management | Case Management | Financial Management | Human Resource | Payment | Grant Management | Call Centre Software | Business Intelligence &amp; Analytics | Survey | Learning | Service Management | Licencing | Online Dispute Resolution | Portfolio Management | Other | Inventory Management | Content Management | Mapping | Registry | Contract Mgmt | Reporting | Online Application | . System Applications (Technical Capabilities) . DBMS | middleware | Search | Notification | Integration | Accessibility | Access Mgmt | Bulk Email | . Compute . Physical | Virtual | Containers | Serverless | . Storage . Unstructured | Structured | .",
    "url": "http://localhost:4000/docs/DeliverableC/",
    "relUrl": "/docs/DeliverableC/"
  }
  ,"37": {
    "title": "Hosting and Application Development Framework",
    "content": "Hosting and Application Development Framework . The Government of British Columbia is creating a Hosting and Application Development Framework to accelerate digital change across government. This work supports BC’s Digital Framework and is intended to help government embrace modern technology to better serve British Columbians. . The Framework below is an alpha version (https://developer.gov.bc.ca/Agile-Delivery-Journey/Alpha). It is envisioned as a government-wide approach to modernize hosting and the ways that government develops and delivers applications for digital services. It has been modeled on best practices from around the world while aligning with government’s current IT footprint. . We would love your feedback! . We are seeking feedback on the Hosting and Application Development Framework. The intent in disseminating an alpha version of the Framework is to socialize it and iterate on it with the #DigitalBC community, both within government and in the broader technology ecosystem. | We are particularly interested in hearing from people with previous experience implementing a similar framework. We welcome comments on the approach, order of work and if anything is missing or general recommendations. | We are also very interested in hearing from business leads and technologists within government. This Framework will guide government’s direction regarding strategic infrastructure development, as established by the Government CIO (authority is set out in Section 12.2.2 of the Core Policy and Procedures Manual). | This alpha Framework has been developed by a team within the Office of the Government CIO, in the Ministry of Citizen Services. Executive Director Mac Campbell is our Product Champion. You can contribute directly to this repository or email CITZAS@gov.bc.ca. | . Context . The Government of British Columbia has made strong commitments to restoring public services and making opportunities available to everyone. In support of this commitment, public servants across government are working to deliver excellent digital services that are simple, modern and focused on user needs. . Governments like ours clearly have opportunities to make better use of technology to serve people in ways that are open, collaborative and user-centric. But many organizations, including governments, struggle to keep up with changing service expectations. . That’s why we have adopted BC’s Digital Framework. The Digital Framework drives a coordinated, intentional approach to transitioning into a digital government that meets the internet-era needs and expectations of British Columbians. A key action in the Digital Framework is a new Hosting and Application Development Framework (HADF) to assist ministry decision-making, including for the future of 1600 legacy applications. HADF will support a shift in the digital delivery model over the next three years, during which time the current outsourcing of data centre and managed services will be up for renewal. . Purpose . The purpose of the Hosting and Application Development Framework (HADF) is to: . Understand government’s future state IT needs, new services and digital platforms available to us, and opportunities for future IM/IT service delivery | Inform future procurements to ease our transition to a more digital government | . Additional goals include: . A plan to modernize and improve government-wide approaches and tools for hosting and managing applications and providing services | An integrated strategy will ensure that learning is shared between groups and not run on a project by project basis | A common framework for decision making such that decisions across government are consistent and allow for economies of scale, shared learning, and greater degrees of resource compatibility | A common forum to raise issues, create transparency around shared challenges and ensure consistent performance management of teams, vendors and software | Playbooks consisting of reference architectures, patterns, and other guidance instruments | . Problems we are trying to solve . Client Ministries are seeking modern services from the OCIO . Through recent user research on cloud, Ministries expressed interest in an improved OCIO service model for hosting | Clear policies and guidelines, enterprise-level agreements, predictable timelines and easy-to-access solutions | Ministries are seeking alternatives to the current model but are unsure of options and burdened with the current state | . Ministries and partners would benefit from a clear government-wide strategy . There are currently approximately 1600 applications in the data centres | Opportunities to provide pathways to modernize and improve government-wide approaches and tools for hosting, managing applications and providing services | Lift-and-shift strategies to cloud have not generally been successful; we need a better approach | . Modern hosting would support and accelerate the Digital Framework . Work aligns closely with our commitment to being digital inside | Consistent with our Digital Principles and expected updates to Chapter 12 | Gartner predicts that by 2025, 80% of enterprises will shut down their traditional data centers | Potential opportunities to leverage modern hosting to improve costing and elasticity | . Deliverables . The scope of the Framework includes a package of five key deliverables: . . A: Hosting and Application Development Strategy The strategy will inform the future direction of managed hosting and data centre services for government as well as application development and software services. . Align with key government initiatives and mandates | Provide an overview of the evolution of hosting, data centre services and application development | Chart the future direction of hosting and application development | . B: Framework &amp; Application Portfolio Summary The summary will outline the current state of government’s 1600+ application portfolio. . What can we summarize about our current portfolio? | How many are custom built vs COTS or SAAS? | What is the average amount of time since the last minor and major releases of the custom-built applications? | What are the underlying technologies and is support available? | Are there specific types or classes of applications? | . C: Playbook for Modern Application Architecture The playbook will provide guidance on adoption strategies, efficiencies, and implementation. . Adoption strategies – 6Rs (rehost, replatform, repurchase, refactor, retire, and retain) | Lessons learned and key success factors | Analysis of 6Rs against common application archetypes | Resources (e.g. standards, other supports in government) | Cost analysis guidance | . D: Future State Blueprint The blueprint will propose a reference architecture and measurable use cases delivering high business impact. Connected is the Common Components Program Framework. This will need community participation and executive governance. . Assess capabilities that the government owns today | Assist in identifying leading technologies as part of a portfolio of common components | Support alignment between business units | Present best practices from leading governments | Inform interfaces between legacy and new systems | . E: Policy Will review policy instruments and principles influencing the Framework and co-create new ones where required. . Digital Policy Framework CCPM Chapter 12 | Managing Government Information Policy (in development) | Appropriate Use Policy (being updated) | . | Information Security Policy and Guidelines | CPPM Chapter 6, Procurement (in development) | Standards of Conduct | Various technical and security standards administered by the OCIO (over 40+ standards) | Digital Principles | Ten Principles of Privacy Protection | . We want to hear from you. . What are your thoughts on these deliverables? Are we missing any key themes? Any other deliverable we should be thinking of? . Leave comments on this repository or email CITZAS@gov.bc.ca .",
    "url": "http://localhost:4000/docs/",
    "relUrl": "/docs/"
  }
  ,"38": {
    "title": "",
    "content": "What is this? . Here you will find high-level types of applications or systems deployed in Government. We have taken the liberty of providing here a first-cut definition of those types for your feedback. The purpose of “typing” our applications is to illustrate potential for re-use across Government. The source for this categorization is information about approximately 1,600 applications held by the Digital Investment office within the OCIO. . For those familiar with capability modeling, the categorizations presented here are very (very) loosely related, but are not intended to present a model of the things that Government must do well to be effective. That is another exercise. .",
    "url": "http://localhost:4000/docs/OldeREADME.html",
    "relUrl": "/docs/OldeREADME.html"
  }
  ,"39": {
    "title": "",
    "content": "#Deliverable B sdss .",
    "url": "http://localhost:4000/docs/Testcontent.html",
    "relUrl": "/docs/Testcontent.html"
  }
  
}